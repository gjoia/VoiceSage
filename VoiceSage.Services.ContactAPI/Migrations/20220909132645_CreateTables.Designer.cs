// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VoiceSage.Services.ContactAPI.DbContexts;

namespace VoiceSage.Services.ContactAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220909132645_CreateTables")]
    partial class CreateTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VoiceSage.Services.ContactAPI.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("VoiceSage.Services.ContactAPI.Models.ContactGroup", b =>
                {
                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("ContactId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("ContactGroups");
                });

            modelBuilder.Entity("VoiceSage.Services.ContactAPI.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            Description = "Testers Group",
                            GroupName = "Testers"
                        },
                        new
                        {
                            GroupId = 2,
                            Description = "Players Group",
                            GroupName = "Players"
                        });
                });

            modelBuilder.Entity("VoiceSage.Services.ContactAPI.Models.ContactGroup", b =>
                {
                    b.HasOne("VoiceSage.Services.ContactAPI.Models.Contact", null)
                        .WithMany("ContactGroups")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoiceSage.Services.ContactAPI.Models.Group", null)
                        .WithMany("ContactGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoiceSage.Services.ContactAPI.Models.Contact", b =>
                {
                    b.Navigation("ContactGroups");
                });

            modelBuilder.Entity("VoiceSage.Services.ContactAPI.Models.Group", b =>
                {
                    b.Navigation("ContactGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
